#!/usr/bin/perl

# Email::Texter - extract essentials from verbose emails
# Copyright (C) 2014 Bearstech
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Debian deps: libwww-perl libemail-mime-perl libhtml-parser-perl libhttp-message-perl
use strict;
use warnings;
use Email::Texter;
use HTML::Entities;
use LWP::UserAgent;
use HTTP::Request::Common qw(POST);

if (@ARGV < 2) {
  print STDERR "Usage: $0 [--html] http://redmine-host/mail_handler mail-ws-key\n";
  exit 1.
}
(my $html = $ARGV[0] eq '--html') && shift @ARGV;
my $url = shift @ARGV;
my $key = shift @ARGV;

# Slurp email from stdin
my $source = do { local $/; <STDIN> };
my $email = Email::MIME->new($source);

# Texterize email - more or less
$html ? email_texter($email, text_edit => \&htmlizer) : email_texter($email);

# Post-process line-breaks and paragraphs for the --html option
# (this mode turned out to be mandatory if you use the CKEditor
# plugin which expects HTML as text source [sic])
sub htmlizer {
  my $text = shift;

  my $html = '';
  foreach (split (/\r?\n{2,}/, $text)) {
    my $p = encode_entities($_);
    $p =~ s:\n(.):<br/>\n$1:g;
    $html .= "<p>$p</p>\n\n";
  }
  $html;  # Yes, HTML stuff in a text/plain part
}

# Post to Redmine's incoming email webservice
my $ua = LWP::UserAgent->new(ssl_opts => {verify_hostname => 0});
my $req = POST $url, [ key => $key, email => $email->as_string ];
my $res = $ua->request($req);
if (not $res->is_success) {
  print STDERR $res->status_line;
  exit 2;
}
